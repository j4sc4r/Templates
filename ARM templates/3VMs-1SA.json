{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "StorageSKU": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "MachineSKU": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_E2s_v3",
                "Standard_D2s_v3",
                "Standard_B2s"
            ],
            "metadata": {
                "description": "VM Account type"
            }
        },
        "count": {
            "type": "int",
            "defaultValue": 3
        },
        "UserName": {
            "type": "string"
        },
        "UserPassword": {
            "type": "securestring"
        },
        "vmName": {
            "type": "string",
            "defaultValue": "autovm"
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[concat(parameters('vmName'), 'storage0815187')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "location": "germanywestcentral",
            "tags": {
                "displayName": "autoVM Storage Account"
            },
            "sku": {
                "name": "[parameters('StorageSKU')]"
            },
            "kind": "Storage"
        },
        {
            "name": "[concat(parameters('vmName'), '-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "location": "germanywestcentral",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('vmName'), '-vn')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmName'), '-nsg'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat(parameters('vmName'), '-sub')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('vmName'), '-nsg'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('vmName'), copyIndex(), '-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('vmName'), '-vn'))]"
            ],
            "copy":{
                "name": "nicCopy",
                "count": "[parameters('count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('vmName'), '-vn'), concat(parameters('vmName'), '-sub'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location": "germanywestcentral",
            "dependsOn": [
                "nicCopy"
            ],
            "copy":{
                "name": "vmCopy",
                "count": "[parameters('count')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('MachineSKU')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'), copyIndex())]",
                    "adminUsername": "[parameters('UserName')]",
                    "adminPassword": "[parameters('UserPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), copyIndex(), '-disk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), copyIndex(), '-nic'))]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}